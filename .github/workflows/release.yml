name: Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write  # needed to create GitHub Releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ""
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ""
            archive: tar.gz

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl-tools (Linux only)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (if available)
        run: |
          STRIP=$(which strip || true)
          if [ -n "$STRIP" ] && [ -f target/${{ matrix.target }}/release/pirkle${{ matrix.ext }} ]; then
            $STRIP target/${{ matrix.target }}/release/pirkle${{ matrix.ext }} || true
          fi
        shell: bash

      - name: Compress to .tar.gz (Unix)
        if: matrix.archive == 'tar.gz'
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf pirkle-${{ matrix.target }}.tar.gz pirkle${{ matrix.ext }}
        shell: bash

      - name: Compress to .zip (Windows)
        if: matrix.archive == 'zip'
        run: |
          cd target/${{ matrix.target }}/release
          powershell Compress-Archive -Path pirkle.exe -DestinationPath pirkle-${{ matrix.target }}.zip

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/${{ matrix.target }}/release/pirkle-${{ matrix.target }}.tar.gz
            target/${{ matrix.target }}/release/pirkle-${{ matrix.target }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}